{"version":3,"sources":["Recipe.js","aeropress.svg","App.js","reportWebVitals.js","index.js"],"names":["COFFEE_WATER_RATIOS","coffee","water","GRIND_BREWTIME_RATIOS","grind","time","BLOOM_SECONDS","BLOOM_WATER_G","BREW_TEMP_C","CLOCKWISE_STIR_TIMES","randomElement","items","Math","floor","random","length","Recipe","props","handleClick","bind","state","started","inverted","bloomSeconds","bloomWaterG","brewTempC","coffeeWaterRatio","grindBrewTime","clockwiseStirTimes","anticlockwiseStir","this","setState","animating","timer","setTimeout","_","celsius","instruction","times","CSSTransition","classNames","timeout","unmountOnExit","appear","renderHeatWaterStep","renderGrindCoffeeStep","renderInvertStep","renderPourCoffeeStep","renderBloomStep","renderAddWaterStep","renderStirStep","renderBrewStep","renderEndInvertStep","className","onClick","TransitionGroup","renderRecipe","React","Component","App","src","aeropress","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f038ca1f.chunk.js","sourcesContent":["import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst COFFEE_WATER_RATIOS = [\n  { coffee: 23, water: 200 },\n  { coffee: 18, water: 250 },\n  { coffee: 15, water: 250 },\n  { coffee: 12, water: 200 }\n];\n\nconst GRIND_BREWTIME_RATIOS = [\n  { grind: 'fine', time: 60 },\n  { grind: 'medium', time: 90 },\n  { grind: 'coarse', time: 120 }\n];\n\nconst BLOOM_SECONDS = [20, 30, 40];\nconst BLOOM_WATER_G = [30, 60];\nconst BREW_TEMP_C = [80, 85, 90, 95];\nconst CLOCKWISE_STIR_TIMES = [0, 1, 2];\n\nfunction randomElement(items) {\n  return items[Math.floor(Math.random()*items.length)];\n}\n\nfunction toFahrenheit(celsius) {\n  return (celsius * 9 / 5) + 32;\n}\n\nfunction formatTimeEnglish(times) {\n  if (times === 1) {\n    return 'once';\n  } else {\n    return '' + times + ' times';\n  }\n}\n\nclass Recipe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      started: false,\n      inverted: false,\n      bloomSeconds: BLOOM_SECONDS[0],\n      bloomWaterG: BLOOM_WATER_G[0],\n      brewTempC: BREW_TEMP_C[0],\n      coffeeWaterRatio: COFFEE_WATER_RATIOS[0],\n      grindBrewTime: GRIND_BREWTIME_RATIOS[0],\n      clockwiseStirTimes: CLOCKWISE_STIR_TIMES[0],\n      anticlockwiseStir: true,\n    };\n  }\n\n  handleClick() {\n    this.setState({ started: false, animating: true });\n    this.timer = setTimeout(_ => {\n      this.setState({\n        started: true,\n        inverted: randomElement([true, false]),\n        bloomSeconds: randomElement(BLOOM_SECONDS),\n        bloomWaterG: randomElement(BLOOM_WATER_G),\n        brewTempC: randomElement(BREW_TEMP_C),\n        coffeeWaterRatio: randomElement(COFFEE_WATER_RATIOS),\n        grindBrewTime: randomElement(GRIND_BREWTIME_RATIOS),\n        clockwiseStirTimes: randomElement(CLOCKWISE_STIR_TIMES),\n        anticlockwiseStir: randomElement([true, false]),\n      })}, 400);\n  }\n\n  renderHeatWaterStep() {\n    return <li>\n      Heat <strong>{this.state.coffeeWaterRatio.water}g</strong> of water\n      to <strong>{this.state.brewTempC}°C</strong> /\n      <strong>{toFahrenheit(this.state.brewTempC)}°F</strong>.\n    </li>;\n  }\n\n  renderGrindCoffeeStep() {\n    return <li>\n      Grind <strong>{this.state.coffeeWaterRatio.coffee}g</strong> of coffee to a {this.state.grindBrewTime.grind} grind.\n    </li>;\n  }\n\n  renderPourCoffeeStep() {\n    return <li>\n      Pour in the ground coffee.\n    </li>;\n  }\n\n  renderInvertStep() {\n    if (this.state.inverted) {\n      return <li>Place the aeropress in the upside-down orientation.</li>\n    } else {\n      return <li>Place the aeropress on the mug in the normal orientation with wet filter and cap on.</li>\n    }\n  }\n\n  renderBloomStep() {\n    if (this.state.bloomWaterG > 0) {\n      return <li>\n        Add <strong>{this.state.bloomWaterG}g</strong> of water and wait\n        <strong> {this.state.bloomSeconds}</strong> seconds\n        for the coffee to bloom.\n      </li>;\n    }\n  }\n\n  renderAddWaterStep() {\n    if (this.state.bloomWaterG > 0) {\n      return <li>\n        Add the remaining <strong>{this.state.coffeeWaterRatio.water - this.state.bloomWaterG}g</strong> of water.\n      </li>;\n    } else {\n      return <li>\n        Add all the water (<strong>{this.state.coffeeWaterRatio.water}g</strong>).\n      </li>;\n    }\n  }\n\n  renderBrewStep() {\n    return <li>\n      Wait <strong>{this.state.grindBrewTime.time}s</strong> to brew.\n    </li>;\n  }\n\n  renderStirStep() {\n    if (this.state.clockwiseStirTimes > 0) {\n      let instruction = ''\n      instruction += 'Stir ' + formatTimeEnglish(this.state.clockwiseStirTimes) + ' in one direction.';\n      if (this.state.anticlockwiseStir) {\n        instruction += ' Repeat in the other direction.'\n      }\n      return <li>\n        { instruction }\n      </li>\n    }\n  }\n\n  renderEndInvertStep() {\n    if (this.state.inverted) {\n      return <li>\n        Wet the filter paper, and put the cap on.\n        Place the mug upside-down on the aeropress and flip to be the normal orientation.\n      </li>\n    }\n  }\n\n  renderRecipe() {\n    if (this.state.started) {\n      return <CSSTransition\n          key={0}\n          classNames=\"example\"\n          timeout={500}\n          unmountOnExit\n          appear>\n          <ol key=\"k\">\n            { this.renderHeatWaterStep() }\n            { this.renderGrindCoffeeStep() }\n            { this.renderInvertStep() }\n            { this.renderPourCoffeeStep() }\n            { this.renderBloomStep() }\n            { this.renderAddWaterStep() }\n            { this.renderStirStep() }\n            { this.renderBrewStep() }\n            { this.renderEndInvertStep() }\n            <li>\n              Press.\n            </li>\n          </ol>\n        </CSSTransition>;\n    } else {\n      return <CSSTransition\n          key={1}\n          classNames=\"example\"\n          timeout={500}\n          unmountOnExit\n          appear>\n        <div/>\n      </CSSTransition>;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App-recipe\">\n        <h1>\n          <button className=\"btn btn-primary\" onClick={this.handleClick.bind(this)}>\n            Generate a Recipe\n          </button>\n        </h1>\n        <div className=\"card\">\n          <div className=\"card-block\">\n            <TransitionGroup>\n              { this.renderRecipe() }\n            </TransitionGroup>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Recipe;\n","export default __webpack_public_path__ + \"static/media/aeropress.8214f2d0.svg\";","import './App.css';\nimport Recipe from './Recipe.js';\nimport aeropress from './aeropress.svg';\nimport React from 'react';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={aeropress} className=\"App-logo\" alt=\"logo\" />\n            <h1 className=\"App-title\">Random Aeropress Recipe</h1>\n          </header>\n          <Recipe/>\n          <footer className=\"App-footer\">\n            <p>\n              Built with &hearts; by <a href=\"https://github.com/thewinniewu\">thewinniewu</a>\n              <br/>\n               Inspired by <a href=\"https://web.archive.org/web/20171208104650/https://jimseven.com/2017/12/06/coffee-brewing-dice/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                 James Hoffmann’s Coffee Brewing Dice\n               </a> | Aeropress icon made by <a href=\"https://www.flaticon.com/authors/monkik\" target=\"_blank\" rel=\"noopener noreferrer\">\n                 monkik\n               </a>\n            </p>\n          </footer>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}